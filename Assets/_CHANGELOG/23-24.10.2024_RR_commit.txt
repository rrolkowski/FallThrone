
1.Przerobiłem skrypt ObjectGrabber.cs - Teraz podczas brania obiektu, staje się przezroczysty, a podczas lądowania na ziemie z powrotem "solidny"

 - Ustawiłem także, by w momencie puszczania/czy rzucania obiektów Rigidbody stawał się isKinematic = true 
		// Nie wiem czy ogólnie jest takie założenie ale, wydaje mi się, że tak

 - Dodałem raycast, by teraz precyzyjnie można było klikać myszką w pożądany obiekt do wzięcia 
		// Tutaj muszę jeszcze zmienić na Physics.RaycastAll() by przechodziło przez wszystkie collidery i wyszukiwało np. Interactable

 - Dodałem także Range w postaci cylindra, by w przyszłości można byłoby chwytać myszką wysoki obiekty
		// Opcjonalne?

 - Teraz w grze podczas trzymania obiektu gracz może rzucić obiektem, tam gdzie wskazuje jego kursor, o ile nie przekracza danego zasięgu

2.Dodałem skrypt ThrowableObject.cs - Skrypt odpowiada za kolizję obiektu Interactable z ziemią

3.Dodałem skrypt RangeCircleController.cs - Ma on odpowiadać za całą logikę związaną z "RangeCircle", obiektem który ma ukazywać zasięg rzucanego obiektu
		
 - Dodałem RangeCylider.png jako sprite przedstawiający zakres zasięgu rzutu
		// Na ten moment wydaje mi się, że nie jest to złe ukazanie zasięgu, ew. można pomyśleć jeszcze na jakimś lineRenderer'em


		// Tak wiem, dodałem trochę raycast'ów, ale wydaje mi się, że jakoś na optymalizacji narazie nie ucierpimy,
		   dodatkowo trochę dodałem ograniczeń, by w jakimś stopniu to zoptymalizować

 - Dodałem szybko prostą animacje range, by było miło dla oka :)
							

